AWnimp <- subset(AW, !Imp)
AWnimp$OrderType<-ifelse(AWnimp$IC,'OtherCnj',
ifelse(AWnimp$`PV.e`,'eCnj',
ifelse(AWnimp$`PV.kaa`,'kaaCnj',
ifelse(AWnimp$`PV.ka` | AWnimp$`PV.ta`,'OtherCnj',
ifelse(AWnimp$IC & AWnimp$Cond,'OtherCnj',
ifelse(AWnimp$Cond & !AWnimp$IC,'OtherCnj',
ifelse(AWnimp$Ind,'Ind',
NA
)))))))
AWnimp$OtherCnj<-ifelse(AWnimp$IC,TRUE,
ifelse(AWnimp$`PV.e`,FALSE,
ifelse(AWnimp$`PV.kaa`,FALSE,
ifelse(AWnimp$`PV.ka` | AWnimp$`PV.ta`,TRUE,
ifelse(AWnimp$IC & AWnimp$Cond,TRUE,
ifelse(AWnimp$Cond & !AWnimp$IC,TRUE,
ifelse(AWnimp$Ind,FALSE,
NA
)))))))
AW$OrderType<-ifelse(AW$IC,'Other',
ifelse(AW$`PV.e`,'eCnj',
ifelse(AW$`PV.kaa`,'kaaCnj',
ifelse(AW$`PV.ka` | AW$`PV.ta`,'Other',
ifelse(AW$IC & AW$Cond,'Other',
ifelse(AW$Cond & !AW$IC,'Other',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
NA
))))))))
AW$TopOrder<-ifelse(AW$IC | AW$`PV.e` | AW$`PV.kaa` | AW$`PV.ka` | AW$`PV.ta` | AW$Cond,'Cnj',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
)))
ifelse(AW$IC & AW$Cond,'TimeCond',
ifelse(AW$Cond & !AW$IC,'FutCond',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
NA
))))))))
ifelse(AW$IC & AW$Cond,'TimeCond',
ifelse(AW$Cond & !AW$IC,'FutCond',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
NA
))))
AWnimp$ConjClass <- apply(AWnimp[c("II","AI","TI","TA")], 1, function(x) names(which(x))[1])
table(AWnimp$ConjClass, AWnimp$CnjType)
table(AWnimp$ConjClass, AWnimp$OrderType)
table(AWnimp$ConjClass, AWnimp$TopOrder)
AW$TopOrder<-ifelse(AW$IC | AW$`PV.e` | AW$`PV.kaa` | AW$`PV.ka` | AW$`PV.ta` | AW$Cond,'Cnj',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
)))
AW$TopOrder<-ifelse(AW$IC | AW$`PV.e` | AW$`PV.kaa` | AW$`PV.ka` | AW$`PV.ta` | AW$Cond,'Cnj',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp', NA
)))
unique(AW$TopOrder)
AWnimp$ConjClass <- apply(AWnimp[c("II","AI","TI","TA")], 1, function(x) names(which(x))[1])
table(AWnimp$ConjClass, AWnimp$CnjType)
table(AWnimp$ConjClass, AWnimp$OrderType)
table(AWnimp$ConjClass, AWnimp$TopOrder)
paste(paste(names(which(sort(colSums(subset(AWnimp, II)[grep("PV.[^GL]", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II)[grep("VII", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II)[grep("^N", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
II.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.e + PV.ki + PV.kaa + PV.ka + PV.wi + PV.ati + PV.pe + PV.ohci + PV.isi + PV.nipahi + VII2 + VII5 + VII3 + VII4 + NI12 + NI3 + NI9 + NI2 + NI8 + NDI1 + NI13 + NI14, data = subset(AWnimp, II))
library(polytomous)
## II ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWnimp, II)[grep("PV.[^GL]", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II)[grep("VII", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II)[grep("^N", names(subset(AWnimp, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
II.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.e + PV.ki + PV.kaa + PV.ka + PV.wi + PV.ati + PV.pe + PV.ohci + PV.isi + PV.nipahi + VII2 + VII5 + VII3 + VII4 + NI12 + NI3 + NI9 + NI2 + NI8 + NDI1 + NI13 + NI14, data = subset(AWnimp, II))
### Check cochrane condition
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
II.Univariate_cochran <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.e + PV.ki + PV.kaa + PV.ka + PV.wi + PV.ati + PV.pe + PV.ohci + VII2 + VII5 + VII3 + NI12 + NI3 + NI9 + NI2 + NI8 + NDI1 + NI13, data = subset(AWnimp, II))
for (i in II.Univariate_cochran$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<1)}
for (i in II.Univariate_cochran$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
###Write to file
sink(file = 'IIUni.txt')
print(summary(II.Univariate_cochran), max.print = NA)
sink(NULL)
###Make significance table
II.Uni.Sig<- subset(summary(II.Univariate_cochran)$sumry.table, alpha.X2 <0.05)
sink(file = 'IIUniSig.txt')
print(II.Uni.Sig, max.print = NA)
sink(NULL)
## AI ANALYSIS
###Chose top X PVs (as these were all that were greater or equal to ten in number. (look up reliable Chi.Sq number)
paste(paste(names(which(sort(colSums(subset(AWnimp, AI)[grep("PV.[^GL]", names(subset(AWnimp, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, AI)[grep("VAI", names(subset(AWnimp, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, AI)[grep("^N", names(subset(AWnimp, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
### Don't inlcude 5th person actor, I don't think it is ever true so raises error.
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Actor.4Sg.Pl+ X + PV.e + PV.ki + PV.kaa + PV.pe + PV.ka + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.kah + PV.misi + PV.kakwe + PV.nihta + PV.nipahi + PV.pimi + PV.nohte + PV.wah + PV.papami + PV.mosci + PV.kisi + PV.miyo + PV.ta + PV.papa + PV.maaci + PV.tah + PV.ka_ki + PV.mêkwa + PV.oh + PV.sipwe + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3, data = subset(AWnimp, AI))
### Check cochrane condition
####Cochran’s assessment (presented in its first form in 1952: 334, and with more specifications in 1954: 420) is that a minimum expected value ≈1 in some cells is acceptable as long as at least 80% of the other expected values are >5.
for (i in AI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
AI.Univariate_cochran <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Actor.4Sg.Pl+ X + PV.e + PV.ki + PV.kaa + PV.pe + PV.ka + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.kah + PV.misi + PV.kakwe + PV.nihta + PV.nipahi + PV.pimi + PV.nohte + PV.wah + PV.papami + PV.mosci + PV.kisi + PV.miyo + PV.ta + PV.papa + PV.sipwe + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3, data = subset(AWnimp, AI))
for (i in AI.Univariate_cochran$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<1)}
for (i in AI.Univariate_cochran$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
### write to file
sink(file = 'AIUni.txt')
print(summary(AI.Univariate_cochran), max.print = NA)
sink(NULL)
###Make significance table
AI.Uni.Sig<- subset(summary(AI.Univariate_cochran)$sumry.table, alpha.X2 <0.05)
sink(file = 'AIUniSig.txt')
print(AI.Uni.Sig, max.print = NA)
sink(NULL)
## TI ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWnimp, TI)[grep("PV.[^GL]", names(subset(AWnimp, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, TI)[grep("VTI", names(subset(AWnimp, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, TI)[grep("^N", names(subset(AWnimp, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse=' + ')
TI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Actor.4Sg.Pl + X + PV.e + PV.ki + PV.kaa + PV.ka + PV.wi + PV.pe + PV.ohci + PV.isi + PV.nohte + PV.ati + PV.kah + PV.nitawi + PV.nipahi + PV.oh + PV.kakwe + PV.ta + PV.misi + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NA6 + NI2 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWnimp, TI))
### Check cochran
for (i in TI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
#### 0 items < 0.8
for (i in TI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
#### 36 items/(41*8) == 11%, under 20% threshold
TI.Univariate_cochran <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Actor.4Sg.Pl+ X + PV.e + PV.ki + PV.kaa + PV.ka + PV.wi + PV.pe + PV.ohci + PV.isi + PV.nohte + PV.ati + PV.kah + PV.nitawi + PV.nipahi + PV.oh + PV.kakwe + PV.ta + PV.misi + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NA6 + NI2 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWnimp, TI))
### write to file
sink(file = 'TIUni.txt')
print(summary(TI.Univariate_cochran), max.print = NA)
sink(NULL)
###Make significance table
TI.Uni.Sig<- subset(summary(TI.Univariate_cochran)$sumry.table, alpha.X2 <0.05)
sink(file = 'TIUniSig.txt')
print(TI.Uni.Sig, max.print = NA)
sink(NULL)
## TA ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWnimp, TA)[grep("PV.[^GL]", names(subset(AWnimp, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, TA)[grep("VTI", names(subset(AWnimp, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, TA)[grep("^N", names(subset(AWnimp, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse=' + ')
TA.Univariate <- nominal(OrderType ~ Actor.12Pl+ Goal.12PlO + Actor.1Pl + Goal.1PlO + Actor.1Sg + Goal.1SgO + Actor.2Pl + Goal.2PlO + Actor.2Sg + Goal.2Sg.PlO + Goal.2SgO + Actor.3Pl + Goal.3PlO + Actor.3Sg + Goal.3SgO  + Actor.4Sg.Pl + Goal.4Sg.PlO + Actor.5Sg.Pl + Goal.5Sg.PlO + PV.e + PV.ki + PV.kaa + PV.ka + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.kakwe + PV.kah + PV.ati + PV.nohte + PV.misi + PV.wah + PV.kisi + PV.pimi + PV.ka_ki + PV.miyo + PV.tah + NA6 + NDA1 + NA1 + NA3 + NA7 + NA8 + NDA2, data = subset(AWnimp, TA))
### Check cochran
for (i in TA.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
TA.Univariate_cochran <- nominal(OrderType ~ Actor.12Pl+ Goal.12PlO + Actor.1Pl + Goal.1PlO + Actor.1Sg + Goal.1SgO + Actor.2Pl + Goal.2PlO + Actor.2Sg + Goal.2SgO + Actor.3Pl + Goal.3PlO + Actor.3Sg + Goal.3SgO  + Actor.4Sg.Pl + Goal.4Sg.PlO + Goal.5Sg.PlO + PV.e + PV.ki + PV.kaa + PV.ka + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.kakwe + PV.kah + PV.ati + PV.nohte + PV.misi + PV.wah + PV.kisi + PV.pimi + PV.ka_ki + PV.miyo + PV.tah + NA6 + NDA1 + NA1 + NA3 + NA7 + NA8 + NDA2, data = subset(AWnimp, TA))
for (i in TA.Univariate_cochran$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
### write to file
sink(file = 'TAUni.txt')
print(summary(TA.Univariate_cochrane), max.print = NA)
sink(NULL)
###Make significance table
TA.Uni.Sig<- subset(summary(TA.Univariate_cochran)$sumry.table, alpha.X2 <0.05)
sink(file = 'TAUniSig.txt')
print(TA.Uni.Sig, max.print = NA)
sink(NULL)
View(TA.Univariate)
summary(TA.Univariate)
## Ind v. eCnj
## II ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("PV.[^GL]", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("VII", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("^N", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
paste(paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("PV.[^GL]", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("VII", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("^N", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
## Ind v. eCnj
## II ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("PV.[^GL]", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "),
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("VII", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWnimp, II & (PV.e | Ind))[grep("^N.*[0-9]$", names(subset(AWnimp, II & (PV.e | Ind))), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
II.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.ati + PV.wi + PV.ohci + PV.pe + PV.ka + PV.isi + PV.nipahi + VII2 + VII5 + VII3 + NI12 + NI3 + NI2 + NI9 + NI8 + NDI1 + NI13 + NI14, data = subset(AWnimp, II & (PV.e | Ind)))
### Check cochrane condition
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
AW <- read_delim("../crk3.tsv", "\t")
==========================================================================================================
#Making CnjType Column
AW$CnjType<-ifelse(AW$IC,'IC',
ifelse(AW$`PV.e`,'eCnj',
ifelse(AW$`PV.kaa`,'kaaCnj',
ifelse(AW$`PV.ka` | AW$`PV.ta`,'kaCnj',
ifelse(AW$IC & AW$Cond,'TimeCond',
ifelse(AW$Cond & !AW$IC,'FutCond',
NA
))))))
==========================================================================================================
#Remove imps
AWnimp <- subset(AW, !Imp)
AWnimp$OrderType<-ifelse(AWnimp$IC,'OtherCnj',
ifelse(AWnimp$`PV.e`,'eCnj',
ifelse(AWnimp$`PV.kaa`,'kaaCnj',
ifelse(AWnimp$`PV.ka` | AWnimp$`PV.ta`,'OtherCnj',
ifelse(AWnimp$IC & AWnimp$Cond,'OtherCnj',
ifelse(AWnimp$Cond & !AWnimp$IC,'OtherCnj',
ifelse(AWnimp$Ind,'Ind',
NA
)))))))
AWnimp$OtherCnj<-ifelse(AWnimp$IC,TRUE,
ifelse(AWnimp$`PV.e`,FALSE,
ifelse(AWnimp$`PV.kaa`,FALSE,
ifelse(AWnimp$`PV.ka` | AWnimp$`PV.ta`,TRUE,
ifelse(AWnimp$IC & AWnimp$Cond,TRUE,
ifelse(AWnimp$Cond & !AWnimp$IC,TRUE,
ifelse(AWnimp$Ind,FALSE,
NA
)))))))
#Making Ordertype Column
-------------------------
AW$OrderType<-ifelse(AW$IC,'Other',
ifelse(AW$`PV.e`,'eCnj',
ifelse(AW$`PV.kaa`,'kaaCnj',
ifelse(AW$`PV.ka` | AW$`PV.ta`,'Other',
ifelse(AW$IC & AW$Cond,'Other',
ifelse(AW$Cond & !AW$IC,'Other',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
NA
))))))))
AW$TopOrder<-ifelse(AW$IC | AW$`PV.e` | AW$`PV.kaa` | AW$`PV.ka` | AW$`PV.ta` | AW$Cond,'Cnj',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp', NA
)))
AW$OrderType<-ifelse(AW$IC,'Other',
ifelse(AW$`PV.e`,'eCnj',
ifelse(AW$`PV.kaa`,'kaaCnj',
ifelse(AW$`PV.ka` | AW$`PV.ta`,'Other',
ifelse(AW$IC & AW$Cond,'Other',
ifelse(AW$Cond & !AW$IC,'Other',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp',
NA
))))))))
AW$TopOrder<-ifelse(AW$IC | AW$`PV.e` | AW$`PV.kaa` | AW$`PV.ka` | AW$`PV.ta` | AW$Cond,'Cnj',
ifelse(AW$Ind,'Ind',
ifelse(AW$Imp,'Imp', NA
)))
AWive <- subset(AW, Ind | PV.e)
AWive$OrderType<-ifelse(AWnimp$Ind, 'Ind',
ifelse(AW$`PV.e`,'eCnj',
NA
)))))))
AWive$OrderType<-ifelse(AWnimp$Ind, 'Ind',
ifelse(AW$`PV.e`,'eCnj',
NA
))
AWive$OrderType<-ifelse(AWive$Ind, 'Ind',
ifelse(AW$`PV.e`,'eCnj',
NA
))
unique(AWive$OrderType)
View(AWive)
AWive$OrderType<-ifelse(AWive$Ind, 'Ind',
ifelse(AWive$`PV.e`,'eCnj',
NA
))
View(AWive)
unique(AWive$OrderType)
## Ind v. eCnj
### II ANALYSIS
paste(paste(names(which(sort(colSums(subset(AWive, II)[grep("PV.[^GL]", names(subset(AWive, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, II)[grep("VII", names(subset(AWive, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, II)[grep("^N.*[0-9]$", names(subset(AWive, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
II.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.ati + PV.wi + PV.ohci + PV.pe + PV.ka + PV.isi + PV.nipahi + VII2 + VII5 + VII3 + NI12 + NI3 + NI2 + NI9 + NI8 + NDI1 + NI13 + NI14, data = subset(AWive, II))
### Check cochrane condition
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'IIUni.txt')
print(summary(II.Univariate), max.print = NA)
sink(NULL)
II.Uni.Sig<- subset(summary(II.Univariate)$sumry.table, alpha.X2 <0.05)
sink(file = 'IIUniSig.txt')
print(II.Uni.Sig, max.print = NA)
sink(NULL)
rm(II.Uni.Sig)
### AI ANALYSIS
###=====================================================================================================
paste(paste(names(which(sort(colSums(subset(AWive, AI)[grep("PV.[^GL]", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, AI)[grep("VII", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, AI)[grep("^N.*[0-9]$", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4SgPl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
### AI ANALYSIS
###=====================================================================================================
paste(paste(names(which(sort(colSums(subset(AWive, AI)[grep("PV.[^GL]", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, AI)[grep("VAI", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, AI)[grep("^N.*[0-9]$", names(subset(AWive, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4SgPl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4SgPl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg/Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
### Check cochrane condition; step 1) remove things that aren't about 1
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
### Check cochrane condition; step 1) remove things that aren't about 1
for (i in AI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
View(AI.Univariate)
for (i in II.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
for (i in AI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'AIUni-indve.txt')
print(summary(AI.Univariate), max.print = NA)
sink(NULL)
AI.Uni.Sig<- subset(summary(AI.Univariate)$sumry.table, alpha.X2 <0.05)
sink(file = 'AIUniSig-indve.txt')
print(AI.Uni.Sig, max.print = NA)
sink(NULL)
rm(i)
rm(AI.Uni.Sig)
###Write to file
sink(file = 'IIUni-indve.txt')
print(summary(II.Univariate), max.print = NA)
sink(NULL)
###Make significance table
II.Uni.Sig<- subset(summary(II.Univariate)$sumry.table, alpha.X2 <0.05)
sink(file = 'IIUniSig-indve.txt')
print(II.Uni.Sig, max.print = NA)
sink(NULL)
paste(paste(names(which(sort(colSums(subset(AWive, TI)[grep("PV.[^GL]", names(subset(AWive, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, TI)[grep("VTI", names(subset(AWive, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, TI)[grep("^N.*[0-9]$", names(subset(AWive, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
TI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.wi + PV.ohci + PV.pe + PV.isi + PV.ka + PV.ati + PV.nohte + PV.nipahi + PV.nitawi + PV.kah + PV.oh + PV.ta + PV.misi + PV.kakwe + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NA6 + NI2 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWive, TI))
for (i in TI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
for (i in TI.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
View(II.Univariate)
View(TI.Univariate)
sink(file = 'TIUni-indve.txt')
print(summary(TI.Univariate), max.print = NA)
sink(NULL)
###Make significance table
TI.Uni.Sig<- subset(summary(TI.Univariate)$sumry.table, alpha.X2 <0.05)
sink(file = 'TIUniSig-indve.txt')
print(TI.Uni.Sig, max.print = NA)
sink(NULL)
View(AWive)
paste(paste(names(which(sort(colSums(subset(AWive, TA)[grep("PV.[^GL]", names(subset(AWive, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, TA)[grep("VTA", names(subset(AWive, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWive, TA)[grep("^N.*[0-9]$", names(subset(AWive, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
TA.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Goal.1SgO + Goal.2SgO + Goal.3SgO + Goal.4Sg.PlO + Goal.1PlO + Goal.12PlO + Goal.2PlO + Goal.3PlO + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ka + PV.ohci + PV.kakwe + PV.ati + PV.kah + PV.nohte + PV.wah + PV.misi + PV.ka_ki + PV.kisi + PV.miyo + PV.pimi + VTA7 + VTA1 + VTA2 + VTA4 + VTA5 + VTA3 + NA6 + NDA1 + NA1 + NA3 + NA7 + NA8 + NDA2, data = subset(AWive, TA))
### Check cochrane condiTAon; step 1) remove things that aren't about 1
for (i in TA.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
View(TA.Univariate)
View(TA.Univariate)
for (i in TA.Univariate$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'TAUni-indve.txt')
print(summary(TA.Univariate), max.print = NA)
sink(NULL)
sink(file = 'TAUniSig-indve.txt')
print(TA.Uni.Sig, max.print = NA)
sink(NULL)
TA.Uni.Sig<- subset(summary(TA.Univariate)$sumry.table, alpha.X2 <0.05)
sink(file = 'TAUniSig-indve.txt')
print(TA.Uni.Sig, max.print = NA)
sink(NULL)
rm(TI.Uni.Sig)
rm(TA.Uni.Sig)
rm(II.Uni.Sig)
rm(i)
AWCnj <- subset(AW, (Cnj | Cond))
AWIndImp <- subset(AW, (Ind | Imp))
11404 + 5558
rm(AWIndImp)
unique(AWCnj$CnjType)
unique(AWCnj$OrderType)
### II ANALYSIS
###=====================================================================================================
paste(paste(names(which(sort(colSums(subset(AWCnj, II)[grep("PV.[^GL]", names(subset(AWCnj, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, II)[grep("VII", names(subset(AWCnj, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, II)[grep("^N.*[0-9]$", names(subset(AWCnj, II)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
II.Univariate-cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.wi + PV.ati + PV.pe + PV.isi + PV.ohci + VII2 + VII3 + VII5 + NI12 + NI3 + NI9 + NI2 + NI8 + NI13 + NDI1, data = subset(AWCnj, II))
II.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.wi + PV.ati + PV.pe + PV.isi + PV.ohci + VII2 + VII3 + VII5 + NI12 + NI3 + NI9 + NI2 + NI8 + NI13 + NDI1, data = subset(AWCnj, II))
### Check cochrane condition; step 1) remove things that aren't about 1
for (i in II.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
View(II.Univariate)
View(II.Univariate.cnj)
View(II.Univariate.cnj)
### 5 items, need to remove
II.Univariate.cnj$univariate[22]
### 5 items, need to remove
II.Univariate.cnj$independents[22]
### 5 items, need to remove
II.Univariate.cnj$independents[22,21]
### 5 items, need to remove
II.Univariate.cnj$independents[22]
### 5 items, need to remove
II.Univariate.cnj$independents[21]
### 5 items, need to remove
II.Univariate.cnj$independents[12]
### 5 items, need to remove
II.Univariate.cnj$independents[11]
### 5 items, need to remove
II.Univariate.cnj$independents[2]
II.Univariate.cnj1 <- nominal(OrderType ~ RdplS + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.wi + PV.ati + PV.pe + VII2 + VII3 + VII5 + NI12 + NI3 + NI9 + NI2 + NI8, data = subset(AWCnj, II))
### step 2) make sure 80% of expected are <5
for (i in II.Univariate.cnj1$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
View(II.Univariate.cnj1)
10/(17*4)
sink(file = 'IIUni-cnj.txt')
print(summary(II.Univariate), max.print = NA)
sink(NULL)
sink(file = 'IIUni-cnj.txt')
print(summary(II.Univariate.cnj1), max.print = NA)
sink(NULL)
###Make significance table
II.Uni.Sig.cnj<- subset(summary(II.Univariate.cnj1)$sumry.table, alpha.X2 <0.05)
sink(file = 'IIUniSig-cnj.txt')
print(II.Uni.Sig.cnj, max.print = NA)
sink(NULL)
paste(paste(names(which(sort(colSums(subset(AWCnj, AI)[grep("PV.[^GL]", names(subset(AWCnj, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, AI)[grep("VAI", names(subset(AWCnj, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, AI)[grep("^N.*[0-9]$", names(subset(AWCnj, AI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
AI.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ati + PV.ohci + PV.misi + PV.kah + PV.kakwe + PV.pimi + PV.nihta + PV.nipahi + PV.wah + PV.nohte + PV.kisi + PV.mosci + PV.papami + PV.papa + PV.maaci + PV.miyo + PV.mêkwa + PV.sipwe + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NA3 + NI12, data = subset(AWCnj, AI))
### Check cochrane condition; step 1) remove things that aren't about 1
for (i in AI.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
View(AI.Univariate.cnj)
c(120,124,128,132,172)/4
AI.Univariate.cnj$[30]
AI.Univariate.cnj$independents[30]
AI.Univariate.cnj$independents[30:33]
AI.Univariate.cnj$independents[43]
### 5 items, need to remove
AI.Univariate.cnj1 <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ati + PV.ohci + PV.misi + PV.kah + PV.kakwe + PV.pimi + PV.nihta + PV.nipahi + PV.wah + PV.nohte + PV.kisi + PV.mosci + PV.papami + PV.papa + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + NA6 + NDA1 + NA1 + NA3 + NI12, data = subset(AWCnj, AI))
### step 2) make sure 80% of expected are <5
for (i in AI.Univariate.cnj1$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'AIUni-cnj.txt')
print(summary(AI.Univariate.cnj1), max.print = NA)
sink(NULL)
sink(file = 'AIUni-cnj.txt')
print(summary(AI.Univariate.cnj1), max.print = NA)
sink(NULL)
paste(paste(names(which(sort(colSums(subset(AWCnj, TI)[grep("PV.[^GL]", names(subset(AWCnj, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, TI)[grep("VTI", names(subset(AWCnj, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, TI)[grep("^N.*[0-9]$", names(subset(AWCnj, TI)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
TI.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.wi + PV.isi + PV.pe + PV.ohci + PV.nohte + PV.ati + PV.nitawi + PV.kah + PV.kakwe + PV.nipahi + PV.misi + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NI2 + NA6 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWCnj, TI))
### Check cochrane condition; step 1) remove things that aren't about 1
for (i in TI.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
for (i in TI.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'TIUni-cnj.txt')
print(summary(TI.Univariate.cnj), max.print = NA)
sink(NULL)
TI.Uni.Sig.cnj<- subset(summary(TI.Univariate.cnj)$sumry.table, alpha.X2 <0.05)
sink(file = 'TIUniSig-cnj.txt')
print(TI.Uni.Sig.cnj, max.print = NA)
sink(NULL)
paste(paste(names(which(sort(colSums(subset(AWCnj, TA)[grep("PV.[^GL]", names(subset(AWCnj, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, TA)[grep("VTA", names(subset(AWCnj, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), "+",
paste(names(which(sort(colSums(subset(AWCnj, TA)[grep("^N.*[0-9]$", names(subset(AWCnj, TA)), value = TRUE)]), decr=T)>=10)), collapse =" + "), collapse =" + ")
TA.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Goal.1SgO + Goal.2SgO + Goal.3SgO + Goal.4Sg.PlO + Goal.1PlO + Goal.12PlO + Goal.2PlO + Goal.3PlO + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.kakwe + PV.ohci + PV.kah + PV.ati + PV.misi + PV.wah + PV.kisi + PV.nohte + PV.pimi + PV.miyo + VTA2 + VTA7 + VTA1 + VTA4 + VTA5 + VTA3 + NA6 + NDA1 + NA1 + NA3 + NA7 + NDA2 + NA8, data = subset(AWCnj, TA))
### Check cochrane condiTAon; step 1) remove things that aren't about 1
for (i in TA.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<0.8)}
View(TA.Univariate.cnj)
for (i in TA.Univariate.cnj$univariate)
{print(chisq.test(i$posthoc$ctable)$expected<5)}
sink(file = 'TAUni-cnj.txt')
print(summary(TA.Univariate.cnj), max.print = NA)
sink(NULL)
TA.Uni.Sig.cnj<- subset(summary(TA.Univariate.cnj)$sumry.table, alpha.X2 <0.05)
sink(file = 'TAUniSig-cnj.txt')
print(TA.Uni.Sig.cnj, max.print = NA)
sink(NULL)
rm(AI.*)
rm(AI.Univariate)
rm(AI.Univariate.cnj)
rm(AI.Univariate.cnj1)
rm(TI.Uni.Sig.cnj)
rm(TI.Univariate)
rm(TI.Univariate.cnj)
rm(II.Uni.Sig.cnj)
rm(II.Univariate)
rm(II.Univariate.cnj)
rm(II.Univariate.cnj1)
rm(TA.Uni.Sig.cnj)
rm(TA.Univariate)
rm(TA.Univariate.cnj)
II.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.ati + PV.wi + PV.ohci + PV.pe + PV.ka + PV.isi + PV.nipahi + VII2 + VII5 + VII3 + NI12 + NI3 + NI2 + NI9 + NI8 + NDI1 + NI13 + NI14, data = subset(AWive, II))
###Make significance table
II.Uni.Sig<- subset(summary(II.Univariate)$sumry.table, alpha.X2 <0.05)
AI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ohci + PV.ati + PV.ka + PV.misi + PV.kah + PV.nipahi + PV.kakwe + PV.nihta + PV.nohte + PV.pimi + PV.mosci + PV.papami + PV.ta + PV.wah + PV.miyo + PV.papa + PV.kisi + PV.tah + PV.ka_ki + PV.oh + VAI2 + VAI1 + VAI7 + VAI5 + VAI12 + VAI6 + VAI11 + VAI8 + VAI3 + VAI9 + NA6 + NDA1 + NA1 + NI12 + NA3 + NI2, data = subset(AWive, AI))
###Make significance table
AI.Uni.Sig<- subset(summary(AI.Univariate)$sumry.table, alpha.X2 <0.05)
TI.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.wi + PV.ohci + PV.pe + PV.isi + PV.ka + PV.ati + PV.nohte + PV.nipahi + PV.nitawi + PV.kah + PV.oh + PV.ta + PV.misi + PV.kakwe + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NA6 + NI2 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWive, TI))
###Make significance table
TI.Uni.Sig<- subset(summary(TI.Univariate)$sumry.table, alpha.X2 <0.05)
TA.Univariate <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Goal.1SgO + Goal.2SgO + Goal.3SgO + Goal.4Sg.PlO + Goal.1PlO + Goal.12PlO + Goal.2PlO + Goal.3PlO + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ka + PV.ohci + PV.kakwe + PV.ati + PV.kah + PV.nohte + PV.wah + PV.misi + PV.ka_ki + PV.kisi + PV.miyo + PV.pimi + VTA7 + VTA1 + VTA2 + VTA4 + VTA5 + VTA3 + NA6 + NDA1 + NA1 + NA3 + NA7 + NA8 + NDA2, data = subset(AWive, TA))
###Make significance table
TA.Uni.Sig<- subset(summary(TA.Univariate)$sumry.table, alpha.X2 <0.05)
TA.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + Goal.1SgO + Goal.2SgO + Goal.3SgO + Goal.4Sg.PlO + Goal.1PlO + Goal.12PlO + Goal.2PlO + Goal.3PlO + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.kakwe + PV.ohci + PV.kah + PV.ati + PV.misi + PV.wah + PV.kisi + PV.nohte + PV.pimi + PV.miyo + VTA2 + VTA7 + VTA1 + VTA4 + VTA5 + VTA3 + NA6 + NDA1 + NA1 + NA3 + NA7 + NDA2 + NA8, data = subset(AWCnj, TA))
###Make significance table
TA.Uni.Sig.cnj<- subset(summary(TA.Univariate.cnj)$sumry.table, alpha.X2 <0.05)
II.Univariate.cnj <- nominal(OrderType ~ RdplS + Actor.3Sg + Actor.3Pl + Actor.4Sg + Actor.4Pl + PV.ki + PV.wi + PV.ati + PV.pe + VII2 + VII3 + VII5 + NI12 + NI3 + NI9 + NI2 + NI8, data = subset(AWCnj, II))
AI.Univariate.cnj1 <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ati + PV.ohci + PV.misi + PV.kah + PV.kakwe + PV.pimi + PV.nihta + PV.nipahi + PV.wah + PV.nohte + PV.kisi + PV.mosci + PV.papami + PV.papa + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + NA6 + NDA1 + NA1 + NA3 + NI12, data = subset(AWCnj, AI))
AI.Univariate.cnj1 <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.pe + PV.wi + PV.isi + PV.nitawi + PV.ati + PV.ohci + PV.misi + PV.kah + PV.kakwe + PV.pimi + PV.nihta + PV.nipahi + PV.wah + PV.nohte + PV.kisi + PV.mosci + PV.papami + PV.papa + VAI2 + VAI1 + VAI7 + VAI12 + VAI5 + VAI6 + VAI11 + VAI8 + VAI3 + NA6 + NDA1 + NA1 + NA3 + NI12, data = subset(AWCnj, AI))
TI.Univariate.cnj <- nominal(OrderType ~ RdplS + RdplW + Actor.1Sg + Actor.2Sg + Actor.3Sg + Actor.4Sg.Pl + Actor.1Pl + Actor.12Pl + Actor.2Pl + Actor.3Pl + PV.ki + PV.wi + PV.isi + PV.pe + PV.ohci + PV.nohte + PV.ati + PV.nitawi + PV.kah + PV.kakwe + PV.nipahi + PV.misi + VTI2 + VTI1 + VTI5 + VTI7 + NI12 + NI2 + NA6 + NI13 + NDA1 + NDI1 + NI14 + NI8 + NI9, data = subset(AWCnj, TI))
savehistory("~/Documents/GitHub/Dissertation/analysis/Uni/history_Imessedup.Rhistory")
